name: CI

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-go@v1.1.3
      with:
        go-version: "1.17.x"
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - name: Run backend tests
      run: go test ./...
    - name: Run frontend tests
      run: cd frontend && yarn && yarn run jest
  build-linux:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-node@v1
      with:
        node-version: '12'
    - uses: actions/setup-go@v1.1.3
      with:
        go-version: "1.17.x"
    - name: Create package
      run: sudo bash -c "wget https://github.com/goreleaser/goreleaser/releases/download/v0.138.0/goreleaser_amd64.deb && dpkg -i goreleaser_amd64.deb && goreleaser release --snapshot"
    - uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_S3_ENDPOINT: https://ams3.digitaloceanspaces.com
        AWS_REGION: ''
        SOURCE_DIR: 'dist'
        DEST_DIR: "releases/webmentiond/snapshots/${{ github.sha }}"
  build-website:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
    steps:
    - uses: actions/checkout@v1
    - name: Log into DockerHub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Docker image
      run: docker run --rm -v $PWD:/data zerok/mkdocs:latest build
    - run: "mkdir -p ~/.ssh && chmod 0700 ~/.ssh"
    - run: "echo \"$SSH_PRIVATE_KEY\" > ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa"
    - name: Update website
      run: "cd site && rsync -e \"ssh -o StrictHostKeyChecking=no\" -avz . www-webmentiondorg@webmentiond.org:/srv/www/webmentiond.org/www/htdocs/"
  publish:
    runs-on: ubuntu-latest
    needs:
      - test
      - build-website
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v1
    - name: Log into DockerHub
      run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
    - name: Build Docker image
      run: docker build -t zerok/webmentiond:latest .
    - name: Push image
      run: docker push zerok/webmentiond:latest
